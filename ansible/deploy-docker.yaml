---

- name: DDP-Setup
  hosts: your-VM-name
  become: yes
  become_user: root
  gather_facts: no
  vars_prompt:
    - name: "ansible_become_pass"
      prompt: "BECOME/sudo password"
      private: yes

  tasks:
  - name: Update all packages
    zypper:
      name: '*'
      state: latest
    tags: install

  - name: Install Software
    zypper:
      name:
          - docker
          - python3-docker-compose
      state: present
    tags: install

  - name: Enable docker-service
    service:
      name: docker
      enabled: true

  - name: Make sure docker running
    service:
      state: started
      name: docker

  - name: download/install docker-compose and make it executable
    get_url:
      url: https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: '0755'

  - name: Firewall Configuration
    firewalld:
      permanent: yes
      immediate: yes
      port: "{{item.port}}/{{item.proto}}"
      state: "{{item.state}}"
      zone: "{{item.zone}}"
    with_items:
     - {port: "9091", proto: "tcp", state: "enabled", zone: "public"}

  - name: Create directory DDP if it does not exist
    file:
      path: /opt/DDP
      state: directory
      mode: '0755'

  - name: Copy version as docker
    copy:
      src: ~/DDP/DDP-V0.5.2-pre.tar
      dest: /opt/DDP/DDP-V0.5.2-pre.tar

  - name: Copy docker-compose-file
    copy:
      src: ~/DDP/docker-compose.yml
      dest: /opt/DDP/docker-compose.yml

  - name: Load Docker-Version
    command: docker load -i DDP-V0.5.2-pre.tar
    args:
      chdir: /opt/DDP

  - name: Start Docker-Version
    command: docker-compose up -d
    args:
      chdir: /opt/DDP

  - name: Add user 'ddp'
    user:
      name: ddp
      comment: Dashboard-data-processor

  - name: Add group 'ddp'
    group:
      name: ddp
      state: present

  - name: Recursively change ownership to 'ddp'
    file:
      path: /opt/DDP
      state: directory
      recurse: yes
      owner: ddp
      group: ddp

  - name: add user to docker-group
    user:
      name: ddp
      group: docker

  - name: Check if a reboot is needed
    register: linux_reboot_required_file
    stat: path=/boot/do_purge_kernels get_md5=no

  - name: Reboot the SUSE/OpenSUSE
    reboot:
      msg: "Reboot initiated by Ansible"
      reboot_timeout: 300
      test_command: uptime
    when: linux_reboot_required_file.stat.exists
